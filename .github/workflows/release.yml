name: Release

on:
  workflow_call:
  push:
    tags:
      - '**'
    branches:
      - main
  pull_request:
    paths: 
      - .github/workflows/release.yml
      - build.sh
      - deps.list
      - Dockerfile
      - protoc-wrapper

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:latest

    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/ionos-cloud/protobuf-docker
        tags: |
          type=raw,value=development,enable=${{ github.ref == 'refs/heads/main' }}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=ref,event=tag
        flavor: |
          latest=auto

    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Load dependency versions
      run: cat deps.list >> $GITHUB_ENV

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        push: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        build-args: |
          ALPINE_VERSION=${{ env.ALPINE_VERSION }}
          DART_VERSION=${{ env.DART_VERSION }}
          GO_VERSION=${{ env.GO_VERSION }}
          GOOGLE_API_VERSION=${{ env.GOOGLE_API_VERSION }}
          GRPC_GATEWAY_VERSION=${{ env.GRPC_GATEWAY_VERSION }}
          PROTOC_GEN_DART_VERSION=${{ env.PROTOC_GEN_DART_VERSION }}
          PROTOC_GEN_DOC_VERSION=${{ env.PROTOC_GEN_DOC_VERSION }}
          PROTOC_GEN_GO_GRPC_VERSION=${{ env.PROTOC_GEN_GO_GRPC_VERSION }}
          PROTOC_GEN_GO_VERSION=${{ env.PROTOC_GEN_GO_VERSION }}
          PROTOC_GEN_GOTEMPLATE_VERSION=${{ env.PROTOC_GEN_GOTEMPLATE_VERSION }}
          PROTOC_GEN_GOVALIDATORS_VERSION=${{ env.PROTOC_GEN_GOVALIDATORS_VERSION }}
          PROTOC_GEN_GQL_VERSION=${{ env.PROTOC_GEN_GQL_VERSION }}
          PROTOC_GEN_JSONSCHEMA_VERSION=${{ env.PROTOC_GEN_JSONSCHEMA_VERSION }}
          PROTOC_GEN_LINT_VERSION=${{ env.PROTOC_GEN_LINT_VERSION }}
          PROTOC_GEN_VALIDATE_VERSION=${{ env.PROTOC_GEN_VALIDATE_VERSION }}
          UPX_VERSION=${{ env.UPX_VERSION }}
